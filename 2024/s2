import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Scanner;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.util.HashMap;

public class Main {
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
		Scanner input = new Scanner(System.in);
		HashMap<Character, Integer> letters = new HashMap<Character, Integer>();
		
		int t = input.nextInt();
		int n = input.nextInt();
//		int t = Character.getNumericValue(br.read());
//		br.read();
//		int n = Character.getNumericValue(br.read());
//		br.readLine();
		String[] s = new String[t];
		boolean[][] check = new boolean[t][n];
		String stringAlternate = "T"; //stores whether string meets alternating criteria, if false no, if true yes
		
		for (int i = 0; i < t; i++) {
			s[i] = input.next();
//			s[i] = br.readLine();
		}
		for (int i = 0; i < t; i++) {
			for (int j = 0; j < n; j++) {
				//make a hashmap with 
				if (letters.containsKey(s[i].charAt(j))){
					int temp = letters.get(s[i].charAt(j)) + 1;
					letters.put(s[i].charAt(j), temp);
				}else {
					letters.put(s[i].charAt(j), 1);
				}
			}
			for (int j = 0; j < n; j++) {
				//make a hashmap with 
				if (letters.get(s[i].charAt(j))>1){
					check[i][j] = false;
				}else {
					check[i][j] = true;
				}
				if (j > 0) {
					if(check[i][j]==check[i][j-1]) {
						stringAlternate = "F";
						break;
					}
				}
			}
			pw.print(stringAlternate + "\n");
			pw.flush();
			stringAlternate = "T";
			letters.clear();
		}
		
	}
}
